{
  "name": "My workflow 2",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "=/genai-assistant",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -96,
        -1040
      ],
      "id": "64162c26-f1fe-475c-95ff-0cb394a80616",
      "name": "Webhook",
      "webhookId": "1a02df3b-1e5f-4124-8a28-14a5515baea7"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{$json[\"body\"][\"action\"]}}",
                    "rightValue": "Summarize",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "6a184f90-40d9-4003-a960-f97a6500afd7"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Summarization Path"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "bbcb5f00-cee0-4596-a507-63000bf07495",
                    "leftValue": "={{$json[\"body\"][\"action\"]}}",
                    "rightValue": "Question",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Question Path"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.3,
      "position": [
        800,
        -976
      ],
      "id": "bdf58879-43b8-4a50-9ba8-f51314c13f25",
      "name": "Switch"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "f2f11c54-ce9a-4b6d-8714-e7d37a670ad0",
              "leftValue": "={{$json[\"binary\"]}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {
          "ignoreCase": false
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1216,
        -1120
      ],
      "id": "f324c525-5eed-4a2b-9563-c86e73124a35",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "pdf",
        "binaryPropertyName": "=data",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1424,
        -1136
      ],
      "id": "eda59801-5cf1-4636-bb42-daebcc2a517b",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainSummarization",
      "typeVersion": 2.1,
      "position": [
        1712,
        -1104
      ],
      "id": "cbd6a1a6-abd1-4fa8-82f3-e0627cef0345",
      "name": "Summarization Chain"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {
          "frequencyPenalty": 0
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1712,
        -944
      ],
      "id": "f995d0da-014a-4a01-9a93-0a8c7c0b9e2a",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "QGypcH6S8KHerCAU",
          "name": "n8n free OpenAI API credits"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "68b48416-c4a8-4249-a41c-6632b898997e",
              "leftValue": "={{$json[\"binary\"]}}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1136,
        -736
      ],
      "id": "a75da551-bd5a-4964-b973-dea9b4ee613e",
      "name": "If1"
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1312,
        -752
      ],
      "id": "f19811e8-755e-458f-95ba-2c7c48602b81",
      "name": "Extract from File1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1488,
        -496
      ],
      "id": "e0696572-74bc-448c-b1eb-450afdc14174",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "QGypcH6S8KHerCAU",
          "name": "n8n free OpenAI API credits"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{$json[\"body\"][\"text\"]}}\n",
        "options": {}
      },
      "id": "f8c1b02c-4c3c-4193-aa9a-e8fc193648a0",
      "name": "Question & Answer",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1488,
        -736
      ],
      "typeVersion": 1.8
    },
    {
      "parameters": {
        "respondWith": "allIncomingItems",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        1792,
        -736
      ],
      "id": "555afb9a-2d10-4247-abcf-8614ff9727e5",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "respondWith": "allIncomingItems",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        2000,
        -1104
      ],
      "id": "ad01bbda-b740-46f2-b44a-0686aa13c1c4",
      "name": "Respond to Webhook1"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json[\"body\"][\"role\"].toLowerCase() }}",
                    "rightValue": "teacher",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "541cea7a-83a7-42c6-8e7a-c8a9e1b6e319"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Teacher Path"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d9cafee2-56fb-4d9d-a201-100bc6168e10",
                    "leftValue": "={{ $json[\"body\"][\"role\"].toLowerCase() }}",
                    "rightValue": "student",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Student Path"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.3,
      "position": [
        464,
        -1040
      ],
      "id": "6e39626f-168e-4430-b2ed-06670483a96d",
      "name": "Switch1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json[\"body\"][\"text\"]}}\n",
        "options": {}
      },
      "id": "732437a1-4967-41fc-9e0d-c701aef02289",
      "name": "Question & Answer1",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        -560,
        -800
      ],
      "typeVersion": 1.8
    },
    {
      "parameters": {
        "chunkOverlap": 100,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        768,
        192
      ],
      "id": "c2d8ae6a-12d7-4a96-b2a3-3c6ed642acae",
      "name": "Recursive Character Text Splitter1"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "ee71e2dc-dc71-4d31-a295-28b539824330",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "position": [
        592,
        32
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "QGypcH6S8KHerCAU",
          "name": "n8n free OpenAI API credits"
        }
      }
    },
    {
      "parameters": {
        "mode": "insert",
        "pineconeIndex": {
          "__rl": true,
          "value": "studentbook",
          "mode": "list",
          "cachedResultName": "studentbook"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.3,
      "position": [
        592,
        -160
      ],
      "id": "c983d0c2-35a5-4cb2-ad4c-61b400eb7151",
      "name": "Pinecone Vector Store",
      "credentials": {
        "pineconeApi": {
          "id": "kYZyLNcPr6bfkPqe",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://raw.githubusercontent.com/hm2003MK/arcturus-ebook/refs/heads/main/A-Voyage-to-Arcturus.txt",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        208,
        -128
      ],
      "id": "90d71bb8-8a3c-4ffb-a9ed-a201058df77a",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "content": "### Load data into database\nRecieve txt file of ebook and load it into databasxe\n",
        "height": 627,
        "width": 918,
        "color": 7
      },
      "id": "aede4c32-afca-4eca-8098-9a01f95b7fe8",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        176,
        -304
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolDescription": "Ebook",
        "pineconeIndex": {
          "__rl": true,
          "value": "studentbook",
          "mode": "list",
          "cachedResultName": "studentbook"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.3,
      "position": [
        -464,
        -576
      ],
      "id": "acd4cb13-abfc-4e5e-9dc7-04210b777111",
      "name": "Pinecone Vector Store1",
      "credentials": {
        "pineconeApi": {
          "id": "kYZyLNcPr6bfkPqe",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "0261caba-86bb-4d7a-a3d0-fbb8c6206fb5",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "position": [
        -464,
        -432
      ],
      "typeVersion": 1.2,
      "credentials": {
        "openAiApi": {
          "id": "QGypcH6S8KHerCAU",
          "name": "n8n free OpenAI API credits"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "allIncomingItems",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -272,
        -800
      ],
      "id": "3cd9ba26-933d-490c-8f4e-b0b33a693801",
      "name": "Respond to Webhook2"
    },
    {
      "parameters": {
        "dataType": "binary",
        "textSplittingMode": "custom",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1.1,
      "position": [
        768,
        16
      ],
      "id": "74cffc04-55ba-4fb7-b32a-764381e6b17c",
      "name": "Default Data Loader1"
    },
    {
      "parameters": {
        "content": "Student Question and Answer bot based on free Ebook\n\n",
        "height": 627,
        "width": 918,
        "color": 7
      },
      "id": "39e613c0-9fd6-4a23-92aa-dad2d07b93c4",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -896,
        -848
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -704,
        -592
      ],
      "id": "8089c7fe-6343-4f65-93b3-a06c217f6280",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "lpLfN0VlfXF5aH5A",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "Question Path for teachers to ask chatbot any questions\n\n",
        "height": 451,
        "width": 918,
        "color": 7
      },
      "id": "5c613626-b799-4485-a42b-dc01e17200fc",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        896,
        -800
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "Summarization path for teachers to summarize texts \n\n",
        "height": 451,
        "width": 918,
        "color": 7
      },
      "id": "f77ddc4d-d3f8-4de3-854d-99540bea8861",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1040,
        -1280
      ],
      "typeVersion": 1
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Summarization Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Summarization Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Summarization Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Extract from File1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Question & Answer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File1": {
      "main": [
        [
          {
            "node": "Question & Answer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Question & Answer",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Question & Answer": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarization Chain": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Question & Answer1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter1": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader1",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store": {
      "main": [
        []
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store1": {
      "ai_tool": [
        [
          {
            "node": "Question & Answer1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Question & Answer1": {
      "main": [
        [
          {
            "node": "Respond to Webhook2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader1": {
      "ai_document": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Question & Answer1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "pinData": {},
  "triggerCount": 1,
  "meta": {
    "templateCredsSetupCompleted": true
  }
}